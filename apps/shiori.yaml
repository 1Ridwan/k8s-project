# 0) Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: apps
# 2) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp 
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: 241661649258.dkr.ecr.eu-west-2.amazonaws.com/k8s-ecr:latest
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 10
            periodSeconds: 20
---
# 3) Service
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: apps
spec:
  selector:
    app: myapp 
  ports:
    - name: http
      port: 80
      targetPort: http       # -> containerPort 8080 by name
  type: ClusterIP
---
# 4) Ingress (NGINX)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp
  namespace: apps
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  ingressClassName: nginx
  tls:
    - hosts: ["lab.ridwanahmed.com"]
      secretName: nginx1-jlktt
  rules:
    - host: lab.ridwanahmed.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80




